<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
  "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
  "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration enforcing a strict coding style in Java.
    For details about the configuration options refer to the Checkstyle documentation:
    https://checkstyle.org/.

    Author: leo-eh
-->

<module name="Checker">
  <property name="fileExtensions" value="java, xml, properties"/>

  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <module name="LineLength">
    <property name="fileExtensions" value="java"/>
    <property name="max" value="100"/>
  </module>

  <module name="TreeWalker">
    <module name="AbbreviationAsWordInName">
      <property name="allowedAbbreviationLength" value="0"/>
      <property name="ignoreOverriddenMethods" value="false"/>
      <property name="ignoreStatic" value="false"/>
    </module>
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="false"/>
      <property name="allowSamelineParameterizedAnnotation" value="false"/>
      <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
    </module>
    <module name="ArrayTypeStyle"/>
    <module name="AtclauseOrder">
      <property name="tagOrder" value="@param, @return, @throws"/>
    </module>
    <module name="AvoidDoubleBraceInitialization"/>
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowEscapesForControlCharacters" value="true"/>
      <property name="allowNonPrintableEscapes" value="true"/>
    </module>
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="AvoidStarImport"/>
    <module name="CommentsIndentation"/>
    <module name="CustomImportOrder">
      <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
      <property name="separateLineBetweenGroups" value="true"/>
      <property name="sortImportsInGroupAlphabetically" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="EmptyCatchBlock"/>
    <module name="EmptyLineSeparator">
      <property name="tokens" value="PACKAGE_DEF, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF,
          CTOR_DEF, RECORD_DEF"/>
    </module>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="FallThrough"/>
    <module name="FinalLocalVariable"/>
    <module name="FinalParameters">
      <property name="tokens" value="FOR_EACH_CLAUSE, LITERAL_CATCH, METHOD_DEF, CTOR_DEF"/>
    </module>
    <module name="GenericWhitespace"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="LeftCurly"/>
    <module name="MethodParamPad"/>
    <module name="MissingSwitchDefault"/>
    <module name="ModifiedControlVariable"/>
    <module name="ModifierOrder"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="NeedBraces"/>
    <module name="NoArrayTrailingComma"/>
    <module name="NoCodeInFile"/>
    <module name="NoEnumTrailingComma"/>
    <module name="NoFinalizer"/>
    <module name="NoLineWrap"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceBeforeCaseDefaultColon"/>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="OneStatementPerLine"/>
    <module name="OneTopLevelClass"/>
    <module name="OperatorWrap">
      <property name="option" value="nl"/>
    </module>
    <module name="OuterTypeFilename"/>
    <module name="OuterTypeNumber"/>
    <module name="OverloadMethodsDeclarationOrder"/>
    <module name="ParameterAssignment"/>
    <module name="ParenPad"/>
    <module name="RedundantImport"/>
    <!-- does not work with nested classes -->
    <!--module name="RequireThis">
      <property name="validateOnlyOverlapping" value="false"/>
    </module-->
    <module name="RightCurly">
      <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF,
          LITERAL_ELSE, LITERAL_DO"/>
    </module>
    <module name="SeparatorWrap">
      <property name="tokens" value="DOT, METHOD_REF"/>
      <property name="option" value="nl"/>
    </module>
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA, SEMI, ELLIPSIS, ARRAY_DECLARATOR"/>
      <property name="option" value="eol"/>
    </module>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="SingleSpaceSeparator"/>
    <module name="TypecastParenPad"/>
    <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
    <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
    <module name="UnnecessarySemicolonInEnumeration"/>
    <module name="UnnecessarySemicolonInTryWithResources"/>
    <module name="UnusedImports"/>
    <module name="UpperEll"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyLambdas" value="true"/>
      <property name="allowEmptyLoops" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
      <property name="allowEmptyTypes" value="true"/>
      <property name="ignoreEnhancedForColon" value="false"/>
    </module>

    <!-- Javadoc checks -->
    <module name="InvalidJavadocPosition"/>
    <module name="JavadocContentLocation">
      <property name="location" value="second_line"/>
    </module>
    <!-- incompatible with the current version of Apache Maven Checkstyle Plugin -->
    <!--module name="JavadocLeadingAsteriskAlign"/-->
    <module name="JavadocMethod">
      <property name="accessModifiers" value="public"/>
      <property name="allowedAnnotations" value="Override, Test, ParameterizedTest"/>
    </module>
    <module name="JavadocMissingLeadingAsterisk"/>
    <module name="JavadocMissingWhitespaceAfterAsterisk"/>
    <module name="JavadocStyle"/>
    <module name="JavadocType"/>
    <module name="MissingDeprecated"/>
    <module name="MissingJavadocMethod">
      <property name="scope" value="public"/>
      <property name="allowedAnnotations" value="Override, Test, ParameterizedTest"/>
    </module>
    <module name="MissingJavadocType"/>
    <module name="RequireEmptyLineBeforeBlockTagGroup"/>
    <module name="SingleLineJavadoc"/>
    <module name="SummaryJavadoc"/>

    <!-- Indentation checks -->
    <module name="Indentation">
      <property name="arrayInitIndent" value="4"/>
      <property name="basicOffset" value="4"/>
      <property name="braceAdjustment" value="4"/>
      <property name="caseIndent" value="4"/>
      <property name="lineWrappingIndentation" value="8"/>
      <property name="throwsIndent" value="8"/>
    </module>

    <!-- Package name check -->
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z0-9]*)*$"/>
    </module>

    <!-- Type name check -->
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
    </module>

    <!-- Variable name checks -->
    <module name="CatchParameterName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
      <property name="allowOneCharVarInForLoop" value="true"/>
    </module>
    <module name="MemberName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="PatternVariableName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="RecordComponentName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>

    <!-- Constant name check -->
    <module name="ConstantName">
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
    </module>

    <!-- Method name check -->
    <module name="MethodName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]*)*$"/>
    </module>

    <!-- Type parameter name check -->
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="RecordTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
  </module>
</module>